/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Administrator' at '15-4-15 上午10:20' with Gradle 2.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */
 
buildscript {
	repositories {
		maven { url 'http://repo.spring.io/plugins-release' }
		maven { url "http://192.168.104.217:8888/nexus/content/repositories/snapshots" }
		mavenLocal()
	}
	dependencies {
		classpath("org.springframework.build.gradle:propdeps-plugin:0.0.6")
		classpath("org.springframework.build.gradle:docbook-reference-plugin:0.2.6")
	}
	
}

// Apply the java plugin to add support for Java

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'propdeps'

apply plugin: 'war'

version = "1.0-SNAPSHOT"

compileJava {
	sourceCompatibility=1.8
	targetCompatibility=1.8
	options.encoding = 'UTF-8'
	options.compilerArgs << '-parameters'   
}

eclipseJdt << {
	File f = file('.settings/org.eclipse.core.resources.prefs')
	f.write('eclipse.preferences.version=1\n')
	f.append('encoding/<project>=utf-8')
}

compileJava.options.encoding = 'UTF-8'


eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}

repositories {
	mavenCentral()
	mavenLocal()
	maven { url "http://218.16.141.15:8888/nexus/content/repositories/snapshots" }
	maven { url "http://218.16.141.15:8888/nexus/content/groups/public" }
	maven { url "http://218.16.141.15:8888/nexus/content/repositories/thirdparty" }
	maven { url "http://repository.sonatype.org/content/groups/public/" }
}

sourceSets {
	main {
		resources {
			srcDir 'src/main/resources'
		}
	}
	test {
		resources {
			srcDir 'src/test/resources'
		}
	}
}

//ext.onetwoVersion = "3.5.0-SNAPSHOT";
ext.onetwoVersion = "4.0.4-SNAPSHOT";
ext.commonsioVersion = "2.4"
ext.javaeeVersion = "6.0-3"
ext.mysqlConnectorVersion = "5.1.35"
// In this section you declare the dependencies for your production and test code
dependencies {
	compile("org.onetwo:onetwo-jfish:${onetwoVersion}"){
		exclude group: "log4j", module: "*"
	}
	compile("org.onetwo.plugins:onetwo-plugin-hibernate:${onetwoVersion}")
	compile("org.onetwo.plugins:onetwo-plugin-fmtag:${onetwoVersion}")
	compile("org.onetwo.plugins:onetwo-plugin-admin:${onetwoVersion}")
	compile("org.onetwo.plugins:onetwo-plugin-codegen:${onetwoVersion}")
	compile("org.onetwo.plugins:onetwo-plugin-security:${onetwoVersion}")
	compile("org.onetwo.plugins:onetwo-plugin-permission:${onetwoVersion}")
	compile("org.onetwo.plugins:onetwo-plugin-dq:${onetwoVersion}")
	compile("org.onetwo.plugins:onetwo-plugin-email:${onetwoVersion}")
	compile("org.onetwo.plugins:onetwo-plugin-zkclient:${onetwoVersion}")
	compile("org.onetwo.plugins:onetwo-plugin-jsonrpc-server:${onetwoVersion}")
	compile("org.onetwo.plugins:onetwo-plugin-jsonrpc-client:${onetwoVersion}")
	
	compile("javax.persistence:com.springsource.javax.persistence:2.0.0")
	compile("com.microsoft:sqljdbc4:1.0")
	compile("commons-io:commons-io:${commonsioVersion}")
	compile("mysql:mysql-connector-java:${mysqlConnectorVersion}")
	provided("org.apache.openejb:javaee-api:${javaeeVersion}")
	provided embeddedTomcat()

    testCompile 'junit:junit:4.11'
}

def embeddedTomcat() {
	def tomcatVersion = "7.0.59";
	def jspVersion = "2.2.1-b03"
	
	["org.apache.tomcat.embed:tomcat-embed-core:$tomcatVersion",
	 "org.apache.tomcat.embed:tomcat-embed-logging-log4j:$tomcatVersion",
	 "org.apache.tomcat.embed:tomcat-embed-jasper:$tomcatVersion",
	 "javax.servlet.jsp:jsp-api:${jspVersion}"]
}
